---
# yamllint disable rule:line-length
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: emqx
      namespace: default
    - name: postgres
      namespace: default
  values:
    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2022.8.7@sha256:cd456a5e4d6c989da7d700d0fc86897d55c2fa0ef0fb8b8980f673f50fb077c7
    env:
      TZ: "${TZ}"
      POSTGRES_HOST: postgres-rw.default.svc.cluster.local
      POSTGRES_DB: home_assistant
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${SVC_HOME_ASSISTANT_ADDR}"
        # # ? you can only use an external ip with calico and BGP, set a load balancer ip instead on the service
        # externalIPs:
        #   - "${SVC_HOME_ASSISTANT_ADDR}"
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8123
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          # hajimari.io/enable: "true"
          # hajimari.io/icon: "home-assistant"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          # external-dns/is-public: "true"
          # nginx.ingress.kubernetes.io/auth-url: "https://oauth.${SECRET_DOMAIN}/oauth2/auth"
          # nginx.ingress.kubernetes.io/auth-signin: "https://oauth.${SECRET_DOMAIN}/oauth2/start?rd=$scheme://$best_http_host$request_uri"
          # nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email, x-auth-request-access-token"
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "hass-tls"
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config-v1
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
      configmap.reloader.stakater.com/reload: "home-assistant-env"
    addons:
      codeserver:
        enabled: true
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.6.0
        env:
          TZ: "${TZ}"
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: "nginx"
          hosts:
            - host: &host "hass-code.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host
        volumeMounts:
          - name: config
            mountPath: /config
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 750Mi
